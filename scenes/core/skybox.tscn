[gd_scene load_steps=2 format=3 uid="uid://b1c2d3e4f5g6h"]

[ext_resource type="Environment" uid="uid://c4d5e6f7g8h9i" path="res://resources/graphics/environment/space_default.tres" id="1_abcde"]
[ext_resource type="Shader" path="res://scripts/graphics/shaders/starfield.gdshader" id="2_star"]
[ext_resource type="Shader" path="res://scripts/graphics/shaders/nebula.gdshader" id="3_nebula"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_starfield"]
shader = ExtResource("2_star")
; Adjust uniforms as needed
shader_parameter/density = 0.97
shader_parameter/size = 0.005
shader_parameter/twinkle_speed = 1.0
shader_parameter/parallax_scale = Vector3(0.1, 0.1, 0.1)
; shader_parameter/star_texture = ExtResource("...") ; Optional star texture

[sub_resource type="SphereMesh" id="SphereMesh_sky"]
radius = 5000.0 # Large radius to encompass the scene
height = 10000.0
radial_segments = 32
rings = 16

[sub_resource type="ShaderMaterial" id="ShaderMaterial_nebula"]
shader = ExtResource("3_nebula")
; Adjust uniforms as needed
shader_parameter/nebula_color_1 = Color(0.1, 0.2, 0.4, 1)
shader_parameter/nebula_color_2 = Color(0.3, 0.1, 0.3, 1)
shader_parameter/density = 0.3
shader_parameter/falloff = 2.0
shader_parameter/scale = 1.5
shader_parameter/speed = 0.02
shader_parameter/brightness = 1.2
shader_parameter/parallax_scale = Vector3(0.3, 0.3, 0.3)

[node name="Skybox" type="Node3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = ExtResource("1_abcde")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(-0.866025, -0.433013, 0.25, 0, 0.5, 0.866025, -0.5, 0.75, -0.433013, 0, 0, 0)
shadow_enabled = true
# Adjust light color, energy, and direction as needed for desired space look

[node name="StarfieldMesh" type="MeshInstance3D" parent="."]
mesh = SubResource("SphereMesh_sky")
material_override = SubResource("ShaderMaterial_starfield")
# Ensure starfield is rendered behind nebula if needed by adjusting render priority or order
# Or potentially use a slightly smaller sphere for stars

[node name="NebulaMesh" type="MeshInstance3D" parent="."]
mesh = SubResource("SphereMesh_sky") # Can reuse the same large sphere
material_override = SubResource("ShaderMaterial_nebula")
# Ensure nebula renders correctly with additive blending
